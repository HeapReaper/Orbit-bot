generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auto_message {
  id         Int      @id @default(autoincrement())
  guild_id   String   @db.VarChar(22)
  message    String   @db.Text
  channel    String   @db.VarChar(22)
  time       String   @db.VarChar(5)
  days       Json
  enabled    Boolean  @default(true)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model birthday_settings {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique(map: "guild_id") @db.VarChar(22)
  channel    String   @db.VarChar(22)
  message    String   @db.Text
  time       String   @db.VarChar(5)
  enabled    Boolean
  created_at DateTime @default(now()) @db.DateTime(0)
}

model birthdays {
  id         Int      @id @default(autoincrement())
  guild_id   String   @db.VarChar(22)
  user_id    String   @db.VarChar(22)
  birthdate  DateTime @db.Date
  created_at DateTime @default(now()) @db.DateTime(0)
}

model bot_settings {
  id              Int      @id @default(autoincrement())
  guild_id        String   @unique(map: "guild_id") @db.VarChar(22)
  nickname        String?  @db.VarChar(50)
  language        String?  @db.VarChar(3)
  updates_channel String?  @db.VarChar(22)
  timezone        String?  @db.VarChar(22)
  primary_color   String?  @db.VarChar(22)
  secondary_color String?  @db.VarChar(22)
  created_at      DateTime @default(now()) @db.DateTime(0)
}

model bumpreminder_settings {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique @db.VarChar(22)
  channel    String   @db.VarChar(22)
  message    String   @db.Text
  interval   Int
  created_at DateTime @default(now()) @db.DateTime(0)
  enabled    Int      @default(1)
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.Text
  run_at DateTime @default(now()) @db.DateTime(0)
}

model premium_guilds {
  id            Int       @id @default(autoincrement())
  guild_id      String    @unique @db.VarChar(22)
  premium       Boolean   @default(false)
  created_at    DateTime  @default(now()) @db.DateTime(0)
  trial_ends_at DateTime? @db.DateTime(0)
}

model user_action {
  id        Int      @id @default(autoincrement())
  guildId   String
  userId    String
  action    String
  createdAt DateTime @default(now())
}

model welcome_message_settings {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique(map: "guild_id") @db.VarChar(22)
  channel    String?  @db.VarChar(22)
  enabled    Int
  created_at DateTime @default(now()) @db.DateTime(0)
  messages   Json?
  randomize  Boolean  @default(false)
}

model tickets_settings {
  id           Int      @id @default(autoincrement())
  guild_id     String   @unique(map: "guild_id") @db.VarChar(22)
  channel      String?  @db.VarChar(22)
  channel_conf String?  @db.VarChar(22)
  enabled      Int
  created_at   DateTime @default(now()) @db.DateTime(0)
}

model bot_log {
  id        Int      @id @default(autoincrement())
  type      String
  message   String
  timestamp DateTime @default(now())
}

model guild_log {
  id        Int      @id @default(autoincrement())
  guild_id  String
  type      String
  message   String
  timestamp DateTime @default(now())

  @@index([guild_id])
}

model dashboard_log {
  id        Int      @id @default(autoincrement())
  guild_id  String
  type      String
  message   String
  timestamp DateTime @default(now())

  @@index([guild_id])
}

model anti_bot_settings {
  id                   Int      @id @default(autoincrement())
  guild_id             String   @unique @db.VarChar(22)
  enabled              Boolean  @default(false)
  time_window          Int      @default(10)
  channel_limit        Int      @default(3)
  punishment           String   @default("none") @db.VarChar(20)
  forbidden_words      Json?
  created_at           DateTime @default(now()) @db.DateTime(0)
  updated_at           DateTime @db.DateTime(0)
  jail_role            String?  @db.VarChar(22)
  notification_channel String?  @db.VarChar(22)
}

model channel_of_fame {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique
  channel    String?  @db.VarChar(22)
  emoji      String?  @db.VarChar(10)
  enabled    Boolean  @default(false)
  created_at DateTime @default(now())
}

model giveaway_settings {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique
  channel    String?  @db.VarChar(22)
  enabled    Boolean  @default(false)
  created_at DateTime @default(now())
}

model introduction_settings {
  guild_id     String   @id
  enabled      Boolean  @default(false)
  channel      String?
  max_messages Int      @default(1)
  auto_reply   String?
  auto_emoji   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime
}

model kick_watcher {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique(map: "guild_id_kick") @db.VarChar(22)
  channel    String   @db.VarChar(22)
  enabled    Boolean
  created_at DateTime @default(now()) @db.DateTime(0)
  users      Json
}

model leave_message_settings {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique(map: "guild_id") @db.VarChar(22)
  messages   Json?
  channel    String?  @db.VarChar(22)
  enabled    Int
  randomize  Boolean  @default(false)
  created_at DateTime @default(now()) @db.DateTime(0)
}

model leveling_settings {
  id          Int      @id @default(autoincrement())
  guild_id    String   @unique
  channel     String?  @db.VarChar(22)
  level_roles Json?
  xp_rate     Float    @default(1)
  enabled     Boolean  @default(false)
  created_at  DateTime @default(now())
}

model logging_settings {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique
  channel    String?  @db.VarChar(22)
  events     Json?
  enabled    Boolean  @default(false)
  created_at DateTime @default(now())
}

model minecraft_settings {
  guild_id   String   @id
  enabled    Boolean  @default(false)
  ip         String
  port       Int      @default(25565)
  created_at DateTime @default(now())
  updated_at DateTime
}

model twitch_watcher {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique(map: "guild_id_twitch") @db.VarChar(22)
  channel    String   @db.VarChar(22)
  enabled    Boolean
  created_at DateTime @default(now()) @db.DateTime(0)
  users      Json
}

model youtube_watcher {
  id         Int      @id @default(autoincrement())
  guild_id   String   @unique(map: "guild_id_youtube") @db.VarChar(22)
  channel    String   @db.VarChar(22)
  enabled    Boolean
  created_at DateTime @default(now()) @db.DateTime(0)
  users      Json
}

model guild_invite_settings {
  id                    Int                     @id @default(autoincrement())
  guild_id              String                  @unique
  enabled               Boolean                 @default(false)
  created_at            DateTime                @default(now())
  invite_tracker_invite invite_tracker_invite[]
}

model invite_tracker_invite {
  id                    Int                   @id @default(autoincrement())
  guild_id              String
  invite_code           String                @unique
  invite_type           String?
  created_at            DateTime              @default(now())
  guild_invite_settings guild_invite_settings @relation(fields: [guild_id], references: [guild_id], onDelete: Cascade)

  @@index([guild_id])
}
